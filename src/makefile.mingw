# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file license.txt or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=0
USE_IPV6:=1

INCLUDEPATHS= \
 -I"C:\deps\boost_1_68_0" \
 -I"C:\deps\db-6.2.32.NC\build_unix" \
 -I"C:\deps\openssl-1.0.2q\include"
 
LIBPATHS= \
 -L"C:\deps\boost_1_68_0\stage\lib" \
 -L"C:\deps\db-6.2.32.NC\build_unix" \
 -L"C:\deps\openssl-1.0.2q"

LIBS= \
 -l boost_system-mgw82-mt-s-x64-1_68 \
 -l boost_filesystem-mgw82-mt-s-x64-1_68 \
 -l boost_program_options-mgw82-mt-s-x64-1_68 \
 -l boost_thread-mgw82-mt-s-x64-1_68 \
 -l boost_chrono-mgw82-mt-s-x64-1_68 \
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS=-DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -DUSE_IPV6 -D__NO_SYSTEM_INCLUDES
#DEBUGFLAGS=-g
CFLAGS=-mthreads -O2 -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
LDFLAGS=-Wl,--dynamicbase -Wl,--nxcompat

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

#ifdef USE_UPNP
# INCLUDEPATHS += -I"/e"
# LIBPATHS += -L"C:\deps\miniupnpc"
# LIBS += -l miniupnpc -l iphlpapi
# DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
#endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock 

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/kernel.o \
    obj/alert.o \
    obj/version.o \
    obj/checkpoints.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/miner.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/keystore.o \
    obj/core.o \
    obj/main.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcblockchain.o \
    obj/rpcmining.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcrawtransaction.o \
    obj/rpcwallet.o \
    obj/script.o \
    obj/scrypt.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/hash.o \
    obj/noui.o \
    obj/chainparams.o


all: netcoind.exe

LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a -l shlwapi 
DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
OBJS += obj/txdb-leveldb.o
leveldb/libleveldb.a:
	cd leveldb; make; cd ..
obj/txdb-leveldb.o: leveldb/libleveldb.a

obj/scrypt.o: scrypt.c
	gcc -c $(CFLAGS) -o $@ $^

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

netcoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	g++ -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_netcoind.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework-mgw82-mt-s-x64-1_68 $(LIBS)

clean:
	rm -f netcoind.exe test_netcoin.exe
	rm -f obj/*.o
	rm -f obj-test/*.o
	rm -f build.h
